[{"/Users/chachi/Desktop/showwcase/src/index.tsx":"1","/Users/chachi/Desktop/showwcase/src/reportWebVitals.ts":"2","/Users/chachi/Desktop/showwcase/src/App.tsx":"3","/Users/chachi/Desktop/showwcase/src/store/index.ts":"4","/Users/chachi/Desktop/showwcase/src/components/templates/Home.tsx":"5","/Users/chachi/Desktop/showwcase/src/store/slices/userSlice.ts":"6","/Users/chachi/Desktop/showwcase/src/components/atoms/Container.tsx":"7","/Users/chachi/Desktop/showwcase/src/components/organisms/NameSelector.tsx":"8","/Users/chachi/Desktop/showwcase/src/components/atoms/Title.tsx":"9","/Users/chachi/Desktop/showwcase/src/components/atoms/Button.tsx":"10","/Users/chachi/Desktop/showwcase/src/components/molecules/LabeledInput.tsx":"11","/Users/chachi/Desktop/showwcase/src/components/atoms/Input.tsx":"12","/Users/chachi/Desktop/showwcase/src/components/atoms/Label.tsx":"13","/Users/chachi/Desktop/showwcase/src/components/templates/Main.tsx":"14","/Users/chachi/Desktop/showwcase/src/components/organisms/IntroSchool.tsx":"15","/Users/chachi/Desktop/showwcase/src/components/molecules/SchoolModal.tsx":"16","/Users/chachi/Desktop/showwcase/src/components/atoms/Modal.tsx":"17","/Users/chachi/Desktop/showwcase/src/store/slices/schoolSlice.ts":"18","/Users/chachi/Desktop/showwcase/src/components/organisms/DisplaySchool.tsx":"19","/Users/chachi/Desktop/showwcase/src/components/molecules/SchoolCard.tsx":"20","/Users/chachi/Desktop/showwcase/src/components/atoms/Card.tsx":"21","/Users/chachi/Desktop/showwcase/src/components/molecules/SideBar.tsx":"22","/Users/chachi/Desktop/showwcase/src/components/utils/PrivateRoute.tsx":"23"},{"size":567,"mtime":1610126124692,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1609885228000,"results":"26","hashOfConfig":"25"},{"size":667,"mtime":1610050207877,"results":"27","hashOfConfig":"25"},{"size":312,"mtime":1609969958615,"results":"28","hashOfConfig":"25"},{"size":696,"mtime":1609885228000,"results":"29","hashOfConfig":"25"},{"size":305,"mtime":1609885228000,"results":"30","hashOfConfig":"25"},{"size":425,"mtime":1609885228000,"results":"31","hashOfConfig":"25"},{"size":892,"mtime":1609885228000,"results":"32","hashOfConfig":"25"},{"size":390,"mtime":1609973395732,"results":"33","hashOfConfig":"25"},{"size":492,"mtime":1609885228000,"results":"34","hashOfConfig":"25"},{"size":546,"mtime":1609885228000,"results":"35","hashOfConfig":"25"},{"size":391,"mtime":1609885228000,"results":"36","hashOfConfig":"25"},{"size":247,"mtime":1609885228000,"results":"37","hashOfConfig":"25"},{"size":630,"mtime":1609970696429,"results":"38","hashOfConfig":"25"},{"size":1189,"mtime":1609970054417,"results":"39","hashOfConfig":"25"},{"size":3667,"mtime":1610050206373,"results":"40","hashOfConfig":"25"},{"size":637,"mtime":1609967172591,"results":"41","hashOfConfig":"25"},{"size":401,"mtime":1609971184071,"results":"42","hashOfConfig":"25"},{"size":805,"mtime":1610050219632,"results":"43","hashOfConfig":"25"},{"size":698,"mtime":1610050202804,"results":"44","hashOfConfig":"25"},{"size":310,"mtime":1610049514972,"results":"45","hashOfConfig":"25"},{"size":795,"mtime":1610050195363,"results":"46","hashOfConfig":"25"},{"size":420,"mtime":1610050204757,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1e49kno",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},"/Users/chachi/Desktop/showwcase/src/index.tsx",[],["102","103"],"/Users/chachi/Desktop/showwcase/src/reportWebVitals.ts",[],"/Users/chachi/Desktop/showwcase/src/App.tsx",[],"/Users/chachi/Desktop/showwcase/src/store/index.ts",[],"/Users/chachi/Desktop/showwcase/src/components/templates/Home.tsx",["104","105"],"import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteProps, RouterProps, RouteComponentProps } from 'react-router-dom';\nimport { setUserName } from '../../store/slices/userSlice';\nimport Container from '../atoms/Container';\nimport NameSelector from '../organisms/NameSelector';\n\nconst Home: FC<RouteComponentProps> = ({ history }) => {\n  const dispatch = useDispatch();\n  const setUserNameAction = (name: string) => {\n    dispatch(setUserName(name));\n    history.push('/dashboard');\n  };\n\n  return (\n    <div>\n      <Container variant='center'>\n        <NameSelector action={setUserNameAction} />\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/chachi/Desktop/showwcase/src/store/slices/userSlice.ts",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Container.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/organisms/NameSelector.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Title.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Button.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/molecules/LabeledInput.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Input.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Label.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/templates/Main.tsx",["106","107","108","109"],"import React, { FC } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RouteProps, RouterProps, RouteComponentProps } from \"react-router-dom\";\nimport { setUserName } from \"../../store/slices/userSlice\";\nimport Container from \"../atoms/Container\";\nimport DisplaySchool from \"../organisms/DisplaySchool\";\nimport IntroSchool from \"../organisms/IntroSchool\";\n\nconst Main: FC<RouteComponentProps> = ({ history }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Container variant=\"center\">\n        <IntroSchool />\n        <DisplaySchool />\n      </Container>\n    </div>\n  );\n};\n\nexport default Main;\n","/Users/chachi/Desktop/showwcase/src/components/organisms/IntroSchool.tsx",["110"],"import React, { FC, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"../atoms/Button\";\nimport Title from \"../atoms/Title\";\nimport SchoolModal from \"../molecules/SchoolModal\";\nimport { ISchool } from \"../../types/school.types\";\nimport { addSchool } from \"../../store/slices/schoolSlice\";\n\ninterface Props {}\n\nconst IntroSchool: FC<Props> = ({}) => {\n  const dispatch = useDispatch();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const closeModal = () => setModalIsOpen(false);\n\n  const submitHandler = (data: ISchool) => {\n    dispatch(addSchool(data));\n  };\n\n  const name = useSelector<{ username: string }>(({ username }) => username);\n\n  const handleAction = () => setModalIsOpen(true);\n  return (\n    <div\n      style={{\n        alignSelf: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Title>Welcome to {name} education page</Title>\n\n      <Button onClick={handleAction} variant=\"mid\">\n        Add new Education\n      </Button>\n      <SchoolModal {...{ modalIsOpen, closeModal, submitHandler }} />\n    </div>\n  );\n};\n\nexport default IntroSchool;\n","/Users/chachi/Desktop/showwcase/src/components/molecules/SchoolModal.tsx",["111"],"import React, { FC, useState } from \"react\";\nimport YearMonth from \"year-month\";\nimport Input from \"../atoms/Input\";\nimport Title from \"../atoms/Title\";\nimport Modal from \"../atoms/Modal\";\nimport AsyncSelect from \"react-select/async\";\nimport Button from \"../atoms/Button\";\nimport { ISchoolState } from \"../../types/school.types\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Label from \"../atoms/Label\";\n\ninterface Props {\n  modalIsOpen: boolean;\n  closeModal: () => void;\n  submitHandler: (data: any) => void;\n}\n\nconst InitialValue = {\n  school: null,\n  degree: \"\",\n  field: \"\",\n  start: null,\n  end: null,\n  grade: \"\",\n  description: \"\",\n};\n\nconst SchoolModal: FC<Props> = ({ closeModal, modalIsOpen, submitHandler }) => {\n  const [values, setValues] = useState<ISchoolState>(InitialValue);\n  const [present, setPresent] = useState(false);\n  const handleSetState = (key: string, value: any) => {\n    setValues((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n  const loadSchools = async (value: string, callback: any) => {\n    const fetchObj = await fetch(\n      `http://universities.hipolabs.com/search?name=${value}`\n    );\n    const data = await fetchObj.json();\n    const formattedData = data.map((t: any) => ({\n      value: t.name,\n      label: t.name,\n    }));\n    callback(formattedData);\n  };\n\n  const handleSubmit = () => {\n    const { school, start, end, ...rest } = values;\n    const data = {\n      ...rest,\n      id: Math.random().toString(32),\n      school: school?.value,\n      start: start\n        ? start.toLocaleString(\"default\", { month: \"long\", year: \"numeric\" })\n        : \"\",\n      end: present\n        ? \"present\"\n        : end\n        ? end.toLocaleString(\"default\", { month: \"long\", year: \"numeric\" })\n        : \"\",\n    };\n    console.log(data);\n    setValues(InitialValue);\n    submitHandler(data);\n    closeModal();\n  };\n\n  return (\n    <Modal modalIsOpen={modalIsOpen} closeModal={closeModal}>\n      <Title>Add School Experience</Title>\n\n      <div>\n        {/* Name of School, Degree, Field of study, Start year, End Year (Or expected), Grade, a Description field,  */}\n        <AsyncSelect\n          cacheOptions\n          loadOptions={loadSchools}\n          placeholder=\"School\"\n          value={values.school}\n          onChange={(value) => handleSetState(\"school\", value)}\n        />\n        <Input\n          placeholder=\"Degree\"\n          value={values.degree}\n          onChange={(e) => handleSetState(\"degree\", e.target.value)}\n        />\n        <Input\n          placeholder=\"Field of study\"\n          value={values.field}\n          onChange={(e) => handleSetState(\"field\", e.target.value)}\n        />\n\n        <DatePicker\n          selected={values.start}\n          onChange={(date) => handleSetState(\"start\", date)}\n        />\n        <div>\n          <Label>till present?</Label>\n          <input\n            type=\"checkbox\"\n            checked={present}\n            onChange={() => setPresent((prev) => !prev)}\n          />\n        </div>\n        {!present && (\n          <DatePicker\n            selected={values.end}\n            onChange={(date) => handleSetState(\"end\", date)}\n          />\n        )}\n\n        <Input\n          placeholder=\"Grade\"\n          value={values.grade}\n          onChange={(e) => handleSetState(\"grade\", e.target.value)}\n        />\n        <Input\n          placeholder=\"Description\"\n          value={values.description}\n          onChange={(e) => handleSetState(\"description\", e.target.value)}\n        />\n\n        <Button onClick={handleSubmit}>Add School</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SchoolModal;\n","/Users/chachi/Desktop/showwcase/src/components/atoms/Modal.tsx",[],["112","113"],"/Users/chachi/Desktop/showwcase/src/store/slices/schoolSlice.ts",[],"/Users/chachi/Desktop/showwcase/src/components/organisms/DisplaySchool.tsx",["114"],"import { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ISchool } from \"../../types/school.types\";\nimport SchoolCard from \"../molecules/SchoolCard\";\nimport Sidebar from \"../molecules/SideBar\";\ninterface Props {}\n\nconst DisplaySchool: FC<Props> = ({}) => {\n  const schools: any = useSelector<{ schools: ISchool[] }>(\n    ({ schools }) => schools\n  );\n  return (\n    <div style={{ display: \"flex\", marginTop: \"50px\", width: \"90vw\" }}>\n      <Sidebar {...{ schools }} />\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"0 10px\",\n        }}\n      >\n        {schools.map((school: ISchool) => (\n          <SchoolCard {...school} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplaySchool;\n","/Users/chachi/Desktop/showwcase/src/components/molecules/SchoolCard.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/atoms/Card.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/molecules/SideBar.tsx",[],"/Users/chachi/Desktop/showwcase/src/components/utils/PrivateRoute.tsx",["115","116"],"import React, { Component, FC, ReactNode } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {}\n\nconst PrivateRoute: FC<Props> = (props) => {\n  const name = useSelector<{ username: string }>(({ username }) => username);\n  return name ? <Route {...props} /> : <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"125","line":3,"column":22,"nodeType":"123","messageId":"124","endLine":3,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"125","line":3,"column":22,"nodeType":"123","messageId":"124","endLine":3,"endColumn":33},{"ruleId":"121","severity":1,"message":"126","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":10,"column":9,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":11,"column":33,"nodeType":"130","messageId":"131","endLine":11,"endColumn":35},{"ruleId":"121","severity":1,"message":"132","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":17},{"ruleId":"117","replacedBy":"133"},{"ruleId":"119","replacedBy":"134"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":35,"nodeType":"130","messageId":"131","endLine":8,"endColumn":37},{"ruleId":"121","severity":1,"message":"135","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"136","line":1,"column":32,"nodeType":"123","messageId":"124","endLine":1,"endColumn":41},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'RouteProps' is defined but never used.","Identifier","unusedVar","'RouterProps' is defined but never used.","'setUserName' is defined but never used.","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'YearMonth' is defined but never used.",["137"],["138"],"'Component' is defined but never used.","'ReactNode' is defined but never used.","no-global-assign","no-unsafe-negation"]